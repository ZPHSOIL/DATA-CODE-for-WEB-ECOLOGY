mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD)
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical")
SDFT
save_plot("SDFT.png",SDFT)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD, geom = "line", aes_(colour ="blue"))
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical")
SDFT
save_plot("SDFT.png",SDFT)
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical")
SDFT
save_plot("SDFT.png",SDFT)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
library(readxl)
DSD <- read_excel("DSD.xlsx")
View(DSD)
library(readxl)
library(tidyverse)
library(ggplot2)
library(rcompanion)
library(ggpubr)
library(dplyr)
library(car)
library(e1071)
library(afex)
library(MASS)
library(lme4)
library(cowplot)
DSD$Grid<- factor(DSD$Grid,levels = unique(DSD$Grid))
DSD$Location<-factor(DSD$Location)
DSD$Time<-as.numeric(DSD$Time)
theme_set(theme_bw())
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per node and mesocosm")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per each node ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
library(readxl)
library(ggplot2)
library(tidyverse)
library(psych)
library(lmtest)
library(car)
library(lme4)
library(jtools)
library(MASS)
library(rstatix)
library(scales)
library(cowplot)
PCC$Grid<-as.factor(PCC$Grid)
library(readxl)
PCC <- read_excel("D:/UGent/PLANT-SOIL FEEDBACK/PCC.xlsx")
View(PCC)
library(readxl)
library(ggplot2)
library(tidyverse)
library(psych)
library(lmtest)
library(car)
library(lme4)
library(jtools)
library(MASS)
library(rstatix)
library(scales)
library(cowplot)
PCC$Grid<-as.factor(PCC$Grid)
PCC$Time<-as.numeric(PCC$Time)
theme_set(theme_bw())
PCM<- glm.nb(PlantF~Clusterness,data = PC_4)
PC_4<-subset(PCC,Time=="4")
C4M<-glm(PlantF~Clusterness,family=poisson,data = PC_4)
summary(C4M)
Anova(C4M)
PC_4<-subset(PCC,Time=="4")
PC4M<-glm.nb(PlantF~Clusterness,data = PC_4)
summary(PC4M)
Anova(PC4M)
PCM<- glm.nb(PlantF~Clusterness,data = PC_4)
PCM.coef<-data.frame(summary(PCM)$coefficients)
PCM.coef
PCM.inter <- PCM.coef[1,1]
PCM.cluster <- PCM.coef[2,1]
PCM4.test=function(x){exp(PCM.inter+PCM.cluster *x)}
PC4F<- ggplot(PC_4, aes(x=Clusterness, y=PlantF))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun =PCM4.test,color="blue" )
PC4F
PC4FT<-PC4F+labs(x="Regularity of plant spatial network",y="Total plant pixel counts at T4")+theme(axis.title = element_text(size = 12))
PC4FT
save_plot("PC4FT.png",PC4FT)
PCM7<- glm.nb(PlantF~Clusterness,data = PC_7)
PC_7<-subset(PCC,Time=="7")
PC7M<-glm.nb(PlantF~Clusterness,data = PC_7)
summary(PC7M)
Anova(PC7M)
PCM7<- glm.nb(PlantF~Clusterness,data = PC_7)
PCM7.coef<-data.frame(summary(PCM7)$coefficients)
PCM7.coef
PCM7.inter <- PCM7.coef[1,1]
PCM7.cluster <- PCM7.coef[2,1]
PCM7.test=function(x){exp(PCM7.inter+PCM7.cluster *x)}
PC7F<- ggplot(PC_7, aes(x=Clusterness, y=PlantF))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun =PCM7.test,color="blue" )
PC7F
PC7FT<-PC7F+labs(x="Regularity of plant spatial network", y="Total plant pixel counts at T7")+theme(axis.title = element_text(size = 12))
PC7FT
save_plot("PC4FT.png",PC7FT)
PCM<- glm.nb(PlantF~Clusterness,data = PC_4)
PCM.coef<-data.frame(summary(PCM)$coefficients)
PCM.coef
PCM.inter <- PCM.coef[1,1]
PCM.cluster <- PCM.coef[2,1]
PCM4.test=function(x){exp(PCM.inter+PCM.cluster *x)}
PC4F<- ggplot(PC_4, aes(x=Clusterness, y=PlantF))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun =PCM4.test,color="blue" )
PC4F
PC4FT<-PC4F+labs(x="Regularity of plant spatial network",y="Total plant pixel counts at week 6")+theme(axis.title = element_text(size = 12))
PC4FT
save_plot("PC4FT.png",PC4FT)
PCM7<- glm.nb(PlantF~Clusterness,data = PC_7)
PCM7.coef<-data.frame(summary(PCM7)$coefficients)
PCM7.coef
PCM7.inter <- PCM7.coef[1,1]
PCM7.cluster <- PCM7.coef[2,1]
PCM7.test=function(x){exp(PCM7.inter+PCM7.cluster *x)}
PC7F<- ggplot(PC_7, aes(x=Clusterness, y=PlantF))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun =PCM7.test,color="blue" )
PC7F
PC7FT<-PC7F+labs(x="Regularity of plant spatial network", y="Total plant pixel counts at week 9")+theme(axis.title = element_text(size = 12))
PC7FT
save_plot("PC4FT.png",PC7FT)
reg4<-lm(PTB~Clusterness,data =  PC_7)
reg4
b2<-ggplot(PC_7,aes(x=Clusterness,y=PTB))+
geom_point()+theme_classic()+labs(x="Regularity of plant spatial networks ", y="Previous plant biomass (g)")
B2<-b2+geom_abline(intercept = 145.94, slope = -24.93,color="blue")+theme(axis.title.x = element_blank(),axis.title.y = element_text(size=12),axis.title = element_text(size = 12))+ylim(105,135)
B2
reg3<-lm(TB~Clusterness,data =  PC_7)
reg3
b1<-ggplot(PC_7,aes(x=Clusterness,y=TB))+
geom_point()+theme_classic()+labs(x="Regularity of plant spatial networks ", y="Succeeding plant biomass at T7 (g)")
B1<-b1+ theme(axis.title.x = element_blank(),axis.title.y = element_text(size=12))+ylim(10,45)
B1
PLOT1<-plot_grid(B2,B1,PC4FT,PC7FT,labels=c("(a)","(b)","(c)","(d)"),nrow = 2,align = "v")
save_plot("PLOT1.png",PLOT1,ncol = 2,nrow = 2,base_aspect_ratio = 1.3)
PLOT1
reg3<-lm(TB~Clusterness,data =  PC_7)
reg3
b1<-ggplot(PC_7,aes(x=Clusterness,y=TB))+
geom_point()+theme_classic()+labs(x="Regularity of plant spatial networks ", y="Succeeding plant biomass at week 9 (g)")
B1<-b1+ theme(axis.title.x = element_blank(),axis.title.y = element_text(size=12))+ylim(10,45)
B1
PLOT1<-plot_grid(B2,B1,PC4FT,PC7FT,labels=c("(a)","(b)","(c)","(d)"),nrow = 2,align = "v")
save_plot("PLOT1.png",PLOT1,ncol = 2,nrow = 2,base_aspect_ratio = 1.3)
PLOT1
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(readxl)
library(tidyverse)
library(ggplot2)
library(rcompanion)
library(ggpubr)
library(dplyr)
library(car)
library(e1071)
library(afex)
install.packages("afex")
library(readxl)
library(tidyverse)
library(ggplot2)
library(rcompanion)
library(ggpubr)
library(dplyr)
library(car)
library(e1071)
library(afex)
library(MASS)
library(lme4)
library(cowplot)
DSD$Grid<- factor(DSD$Grid,levels = unique(DSD$Grid))
DSD$Location<-factor(DSD$Location)
DSD$Time<-as.numeric(DSD$Time)
theme_set(theme_bw())
DSD_S<-subset(DSD,Time!="0")
ggplot(DSD_S, aes(x=Time,y=SD))+
geom_point()+
geom_smooth(method = "lm",se=FALSE)+
labs(title="Shannon's diversity change across time",x="Sampling time (days)",y="Shannon's diversity")+
theme_classic()
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(size=1.5)+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per each node ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
SD <- SD %>%
mutate(Color = ifelse(Distance == "0.000", "red"))
DSD <- DSD %>%
mutate(Color = ifelse(Distance == "0.000", "red"))
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = Location))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")+
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE)
library(viridis)
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = Location))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")+
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE)
SDF
library(readxl)
DSD <- read_excel("DSD.xlsx")
View(DSD)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")+
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
DSD_S<-subset(DSD,Time!="0")
# 0. Build linear model
model <- lmer(SD~Time*Clusterness+(1|Location),data=DSD_S)
# 1. Add predictions
pred.int <- predict(model, interval = "prediction")
mydata <- cbind(DSD_S, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
p <- ggplot(mydata, aes(Time,  SD)) +
geom_point() +
stat_smooth(method = lm)
SDP<-p +theme_classic()+labs(x="Sampling Time (days) ",y="Shannon's diversity")+scale_x_continuous(breaks=seq(0,90,15))
SDP
save_plot("SDP.png",SDP)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(color = NodeType,size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
library(readxl)
library(tidyverse)
library(ggplot2)
library(rcompanion)
library(ggpubr)
library(dplyr)
library(car)
library(e1071)
library(afex)
library(MASS)
library(lme4)
library(cowplot)
library(viridis)
DSD$Grid<- factor(DSD$Grid,levels = unique(DSD$Grid))
DSD$Location<-factor(DSD$Location)
DSD$Time<-as.numeric(DSD$Time)
theme_set(theme_bw())
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(color = NodeType,size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
DSD$NodeType<-factor(DSD$NodeType)
DSD_S<-subset(DSD,Time!="0")
SDF<- ggplot(DSD_S, aes(x=Time, y=SD))+
geom_point(color = NodeType,size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_identity()+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#F4EDCA", "#293352"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#D16103", "#293352"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per each node ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#D16103", "#C3D7A4"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#D55E00", "#000000"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#999999", "#000000"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#000000","#999999"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per each node ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = c(0.15, 0.85),
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity per each node ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = "none",
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
SHDM<- mixed(SD~Time*Clusterness+(1|Node:Grid)+(1|Grid),REML=F,data = DSD_S,method="S",check_contrasts = F)
SHDM.coef<-data.frame(summary(SHDM)$coefficients)
SHDM.coef
mean.cluster <- mean(DSD_S$Clusterness)
mean.cluster
SHDM.inter <- SHDM.coef[1,1]
SHDM.cluster <- SHDM.coef[3,1]
SHDM.time <- SHDM.coef[2,1]
SHDM.clutim <- SHDM.coef[4,1]
SHDM.test.SD<- function(x){SHDM.inter+SHDM.cluster *mean.cluster+SHDM.time*x+SHDM.clutim*mean.cluster*x}
SDF<- ggplot(DSD_S, aes(x=Time, y=SD,color = NodeType))+
geom_point(size=1.5)+
scale_color_manual(values = c("#000000","#999999"))+
theme(panel.grid = element_blank())+
stat_function(fun = SHDM.test.SD,colour ="blue")
SDF
SDFT<-SDF+scale_x_continuous(breaks=seq(0,90,15))+labs(x="Sampling time (days)",y="Shannon's diversity  ")+ theme(
legend.key.size = unit(0.25, "cm"),
legend.key.width = unit(0.25,"cm"),
legend.position = "none",
legend.direction = "vertical",
axis.title = element_text(size = 12))
SDFT
save_plot("SDFT.png",SDFT)
